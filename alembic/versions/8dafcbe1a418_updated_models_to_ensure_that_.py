"""Updated models to ensure that uneccesary fields are set to nonw

Revision ID: 8dafcbe1a418
Revises: 8ca23c262e3c
Create Date: 2024-09-20 00:26:11.318260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8dafcbe1a418'
down_revision: Union[str, None] = '8ca23c262e3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_content_states', 'content_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_data', 'content_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('user_feedbacks', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('user_feedbacks', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('user_feedbacks', 'feedback',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('user_feedbacks', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_feedbacks', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_feedbacks', 'feedback',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_column('user_feedbacks', 'updated_at')
    op.drop_column('user_feedbacks', 'created_at')
    op.alter_column('user_data', 'content_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_content_states', 'content_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
